
size_t get_offset(int x, int y, int width, int height) 
{
    x = clamp(x, 0, width - 1);
    y = clamp(y, 0, height - 1);
    return y * width * 4 + x * 4;
}

__kernel void edge_detect(
    __global const uchar *src,
    __global uchar *dst,
    int width,
    int height) 
{
    const int y = get_global_id(0);
    const int x = get_global_id(1);

    const int offset = get_offset(x, y, width, height);

    dst[offset] = 0;
    dst[offset + 1] = 0;
    dst[offset + 2] = 0;
    dst[offset + 3] = 255;

    if(src[offset] >= 128) 
    {
        bool has_zero = false;
        for(int y1 = -1; y1 <= 1; ++y1)
        {
            for(int x1 = -1; x1 <= 1; ++ x1) 
            {
                if(x1 != x && y1 != y) 
                {
                    if(src[get_offset(x, y, width, height)] < 128)
                    {
                        has_zero = true;
                        break;
                    }
                }
            }
        }

        if(has_zero) 
        {
            // Now is the edge
            dst[offset] = 255;
        }
        else 
        {
            // Now is inner
            dst[offset] = 255;
            dst[offset + 1] = 255;
            dst[offset + 2] = 255;
        }
    }
}

